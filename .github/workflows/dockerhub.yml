# This workflow build and push Docker image to docker hub
# https://docs.docker.com/ci-cd/github-actions/
name: dockerhub

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get Allure version
        run: |
          ALLURE_VERSION=$(grep 'ARG ALLURE_VERSION' Dockerfile | cut -d'=' -f2)
          echo "ALLURE_VERSION=${ALLURE_VERSION}" >> $GITHUB_ENV

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view ${{ env.ALLURE_VERSION }} &>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "::warning::Release ${{ env.ALLURE_VERSION }} already exists, skipping Docker build and push"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to docker hub
        if: steps.check_release.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/allure:${{ env.ALLURE_VERSION }}, ${{ secrets.DOCKER_HUB_USERNAME }}/allure:latest
          platforms: |-
              linux/amd64
              linux/arm64

      - name: Image digest
        if: steps.check_release.outputs.exists == 'false'
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.exists == 'false'
        run: |
          gh release create ${{ env.ALLURE_VERSION }} \
            --title "Release ${{ env.ALLURE_VERSION }}" \
            --notes "Release for version v${{ env.ALLURE_VERSION }}

          Docker image: https://hub.docker.com/r/andgineer/allure/tags?page=&page_size=&ordering=&name=${{ env.ALLURE_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
